name: .NET (Upload)

on: [push]

jobs:
  build-client:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and test
        run: |
          npm --prefix client ci
          npm --prefix client run build --if-present
        env:
          CI: true

      - name: Upload math result for job 1
        uses: actions/upload-artifact@v1
        with:
          name: wwwroot
          path: src/MyWeb/wwwroot

  build-server:
    runs-on: ubuntu-latest
    needs: build-client
    steps:
      - uses: actions/checkout@v1

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.0.100

      - name: Download math result for job 1
        uses: actions/download-artifact@v1
        with:
          name: wwwroot
          path: src/MyWeb/wwwroot

      - name: Build with dotnet
        run: dotnet publish src/MyWeb --configuration Release --output X

      - name: Check wwwroot
        run: |
          ls -al X
          ls -al X/wwwroot

      - name: Zip
        run: |
          zip MyWeb.zip -r X

      - name: Generate build number
        id: buildnumber
        uses: einaregilsson/build-number@v1
        with:
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v.${{ steps.buildnumber.outputs.build_number }}
          release_name: v.${{ steps.buildnumber.outputs.build_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: MyWeb.zip
          asset_name: MyWeb.zip
          asset_content_type: application/zip
